name: Builds

on:
  push:
  schedule:
    - cron: '0 0 * * 0,6'

jobs:
  build:

    runs-on: "ubuntu-20.04"

    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        sudo apt-get update && sudo apt-get install --no-install-recommends -y \
        bc bison ca-certificates curl flex gcc git libc6-dev libssl-dev make \
        openssl python ssh tzdata wget zip

    - name: Set build date
      id: get-date
      run: |
        sudo timedatectl set-timezone Etc/GMT-7
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")

    - name: Clone Kernel Stuff
      run: |
        git clone -j$(nproc --all) -b 10.0 https://github.com/c3eru/KERNEL_A10 kernel --depth=1 && cd kernel
        git clone -j$(nproc --all) --single-branch https://github.com/fadlyas07/anykernel-3 --depth=1 
        git clone -j$(nproc --all) --single-branch https://github.com/kdrag0n/proton-clang clang-llvm --depth=1

    - name: Gas Build
      run: |
        cd $(pwd)/kernel
        source ../kernel_env.sh
        source ../tg_upload.sh
        bash ../kernel_env.sh $cid $bot $mid
        notif "Build started ..."
        build_start=$(date +"%s")
        export PATH="$(pwd)/clang-llvm/bin:$PATH"
        build_env="ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu-"
        make -j$(nproc --all) -l$(nproc --all) -C $(pwd) O=out $build_env vendor/juice-perf_defconfig
        make -j$(nproc --all) -l$(nproc --all) -C $(pwd) O=out $main_env 2>&1| tee build.log
        if ! [[ -f $(pwd)/out/arch/arm64/boot/Image ]] ; then
            CAPT_TEXT="Build failed bro, build under $branch branch. Pls check the log and fix it ASAP!"
            tg file $(pwd)/build.log $mid "$CAPT_TEXT"
            err "$CAPT_TEXT"
          exit 1 ;
        else
            if [[ -e $(pwd)/out/.config ]] ; then
                cp $(pwd)/out/.config regen_defconfig
                tg file regen_defconfig $mid
            else
                CAPT_TEXT="Bruh .config not found, cannot regenerate defconfig."
                err "$CAPT_TEXT" && tg msg "$CAPT_TEXT"
            fi
        fi
        info
        build_end=$(date +"%s")
        build_diff=$(($build_end - $build_start))
        build_diff_msg="$(($build_diff / 60)) minutes, $(($build_diff % 60)) seconds"
        CAPT_TEXT="Build success after ${build_diff_msg}. Now we will making flashable zip ..."
        notif "$CAPT_TEXT" && tg file build.log $mid "$CAPT_TEXT"
        mv $(pwd)/out/arch/arm64/boot/Image $(pwd)/anykernel-3
        cd anykernel-3 && zip -r9 GF-juice-weekly-$(TZ=Asia/Jakarta date +'%H%M-%d%m%y').zip * && cd ..
        tg file $(echo $(pwd)/anykernel-3/*.zip) $mid "$caption_template"
      env:
        cid: ${{ secrets.CHANNEL }}
        bot: ${{ secrets.TOKEN }}
        mid: ${{ secrets.ID }}
